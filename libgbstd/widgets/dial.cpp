#include"libgbstd/widget.hpp"



namespace gbstd{
namespace widgets{



const
icon
up_icon[] =
{
icon({
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01777,01777,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
}),
icon({
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01333,01333,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01333,01333,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01333,01333,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01333,01333,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01777,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01777,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01444,01444,01777,01777,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01444,01444,01777,01777,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01444,01444,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01333,01444,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01777,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
})
};


const
icon
down_icon[] =
{
icon({
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01767,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01767,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01777,01767,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01777,01767,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01777,01777,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,01555,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
}),
icon({
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01333,01333,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01333,01333,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01333,01333,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01333,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01333,01333,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01777,01777,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01777,01777,01444,01444,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01777,01777,01444,01444,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01777,01777,01444,01444,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01444,01444,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01444,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01777,01777,01555,
01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,01555,
})
};


constexpr const char*  format = "%2d/%2d";


dial::
dial(int  min, int  max, void  (*callback)(dial&,int,int)) noexcept:
m_current(min),
m_min(min),
m_max(max),
m_callback(callback)
{
  m_down_selector = new icon_selector(down_icon);
  m_up_selector   = new icon_selector(  up_icon);

  m_down_button = new button(new table_row({m_down_selector}),down);
  m_up_button   = new button(new table_row({  m_up_selector}),up);

  m_down_button->set_userdata(this);
  m_up_button->set_userdata(this);


  tmpstr  ts;

  m_label = new label(ts(format,min,max));

  m_table_row = new table_row({m_down_button,m_up_button,m_label});
}




void
dial::
up(button&  btn)
{
  auto&  dial = *static_cast<widgets::dial*>(btn.get_userdata());

  dial.m_up_selector->set_current(btn.is_pressed()? 1:0);

    if(btn.get_count())
    {
      btn.reset_count();

        if(dial.m_current < dial.m_max)
        {
          auto  old_value = dial.m_current++;

            if(dial.m_callback)
            {
              dial.m_callback(dial,old_value,dial.m_current);
            }


          tmpstr  ts;

          dial.m_label->set_text(ts(format,dial.m_current,dial.m_max));
        }
    }
}


void
dial::
down(button&  btn)
{
  auto&  dial = *static_cast<widgets::dial*>(btn.get_userdata());

  dial.m_down_selector->set_current(btn.is_pressed()? 1:0);

    if(btn.get_count())
    {
      btn.reset_count();

        if(dial.m_current > dial.m_min)
        {
          auto  old_value = dial.m_current--;

            if(dial.m_callback)
            {
              dial.m_callback(dial,old_value,dial.m_current);
            }


          tmpstr  ts;

          dial.m_label->set_text(ts(format,dial.m_current,dial.m_max));
        }
    }
}


}}




